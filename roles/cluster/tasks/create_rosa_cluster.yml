# Create the ROSA cluster
---
- name: "Load environment-specific cluster configuration"
  include_vars: "{{ ansible_env_path }}/cluster-config.yml"
  tags:
    - cluster
    - cluster-create

- name: "Set full cluster name"
  set_fact:
    full_cluster_name: "{{ cluster_name_prefix }}-{{ target_environment }}"
  tags:
    - cluster
    - cluster-create

- name: "Delete existing cluster if requested"
  shell: |
    rosa delete cluster {{ full_cluster_name }} \
      --yes \
      --watch
  register: cluster_deletion_result
  when: delete_existing_cluster | default(false)
  tags:
    - cluster
    - cluster-delete

- name: "Wait for cluster deletion to complete"
  pause:
    seconds: 60
  when: delete_existing_cluster | default(false)
  tags:
    - cluster
    - cluster-delete

- name: "Skip cluster creation if using existing cluster"
  debug:
    msg: "‚úÖ Using existing cluster: {{ full_cluster_name }}"
  when: skip_cluster_creation | default(false)
  tags:
    - cluster
    - cluster-create

- name: "Build tags string for ROSA cluster"
  set_fact:
    tags_string: "app-{{ target_environment }} {{ full_cluster_name }}"
  when: resource_tags is defined
  tags:
    - cluster
    - cluster-create

- name: "Create ROSA cluster"
  shell: |
    rosa create cluster \
      --cluster-name {{ full_cluster_name }} \
      --sts \
      --mode {{ mode }} \
      --region {{ aws_region }} \
      --version {{ openshift_version }} \
      {% if not enable_autoscaling %}--replicas {{ compute_nodes }}{% endif %} \
      --compute-machine-type {{ compute_machine_type }} \
      --machine-cidr {{ machine_cidr }} \
      --service-cidr {{ service_cidr }} \
      --pod-cidr {{ pod_cidr }} \
      --host-prefix {{ host_prefix }} \
      {% if multi_az %}--multi-az{% endif %} \
      {% if enable_autoscaling %}--enable-autoscaling --min-replicas {{ min_replicas }} --max-replicas {{ max_replicas }}{% endif %} \
      {% if private_cluster %}--private{% endif %} \
      {% if privatelink_enabled %}--private-link{% endif %} \
      {% if enable_fips %}--fips{% endif %} \
      {% if enable_etcd_encryption %}--etcd-encryption{% endif %} \
      --oidc-config-id {{ oidc_config_id }} \
      {% if resource_tags is defined %}--tags "{{ tags_string }}"{% endif %} \
      --yes
  environment:
    AWS_PROFILE: "{{ aws_profile | default('default') }}"
  register: cluster_creation_result
  when: not (skip_cluster_creation | default(false))
  failed_when:
    - cluster_creation_result.rc != 0
    - "'Duplicate cluster name' not in cluster_creation_result.stderr"
  tags:
    - cluster
    - cluster-create

- name: "Handle duplicate cluster"
  set_fact:
    cluster_already_exists: true
    skip_cluster_creation: true
  when:
    - cluster_creation_result is defined
    - cluster_creation_result is not skipped
    - cluster_creation_result.rc is defined
    - cluster_creation_result.rc != 0
    - "'Duplicate cluster name' in cluster_creation_result.stderr"
  tags:
    - cluster
    - cluster-create

- name: "Display message for existing cluster (from check)"
  debug:
    msg:
      - "‚ÑπÔ∏è  Cluster '{{ full_cluster_name }}' already exists"
      - "‚úÖ Using existing cluster (skipping creation)"
      - ""
      - "üîç Check cluster status:"
      - "    rosa describe cluster -c {{ full_cluster_name }}"
  when:
    - skip_cluster_creation | default(false)
    - not (cluster_already_exists | default(false))
  tags:
    - cluster
    - cluster-create

- name: "Display message for duplicate cluster error"
  debug:
    msg:
      - "‚ö†Ô∏è  Cluster '{{ full_cluster_name }}' already exists (duplicate name error)"
      - "‚úÖ Continuing with existing cluster"
      - ""
      - "üîç Check cluster status:"
      - "    rosa describe cluster -c {{ full_cluster_name }}"
  when: cluster_already_exists | default(false)
  tags:
    - cluster
    - cluster-create

- name: "Display cluster creation initiation"
  debug:
    msg:
      - "üöÄ ROSA cluster creation initiated successfully!"
      - ""
      - "üìã Cluster Details:"
      - "  - Cluster name: {{ full_cluster_name }}"
      - "  - Region: {{ aws_region }}"
      - "  - OpenShift version: {{ openshift_version }}"
      - "  - Compute nodes: {{ compute_nodes }}"
      - "  - Machine type: {{ compute_machine_type }}"
      - "  - Multi-AZ: {{ multi_az }}"
      - "  - Autoscaling: {{ enable_autoscaling }}"
      - "  - Private: {{ private_cluster }}"
      - "  - PrivateLink: {{ privatelink_enabled }}"
      - ""
      - "‚è≥ Cluster installation typically takes 30-40 minutes"
      - ""
      - "üîç Monitor cluster status with:"
      - "    rosa describe cluster -c {{ full_cluster_name }}"
      - "    watch -n 60 'rosa describe cluster -c {{ full_cluster_name }} | grep State'"
      - ""
      - "üìù View installation logs:"
      - "    rosa logs install -c {{ full_cluster_name }} --watch"
      - ""
      - "‚è∏Ô∏è  To wait for cluster to be ready, run:"
      - "    ansible-playbook playbooks/main.yml --tags cluster-monitor -e 'target_environment={{ target_environment }}' -e 'wait_for_cluster_ready=true'"
  when:
    - not (skip_cluster_creation | default(false))
    - cluster_creation_result is defined
    - cluster_creation_result is not skipped
    - cluster_creation_result.rc is defined
    - cluster_creation_result.rc == 0
  tags:
    - cluster
    - cluster-create
