---
# Validate Harness installation and setup using REST API

- name: Set API base URL and headers
  set_fact:
    harness_api_base: "https://app.harness.io/gateway"
    harness_api_headers:
      x-api-key: "{{ harness_api_key }}"
      Content-Type: "application/json"

# Validate API Authentication
- name: Validate Harness API authentication
  uri:
    url: "{{ harness_api_base }}/ng/api/user/currentUser"
    method: GET
    headers: "{{ harness_api_headers }}"
    status_code: 200
    validate_certs: yes
  register: current_user
  failed_when: false

- name: Display API authentication status
  debug:
    msg: |
      API Authentication Status:
      - Status: {{ 'Authenticated' if current_user.status == 200 else 'Failed' }}
      - User: {{ current_user.json.data.name | default('N/A') if current_user.status == 200 else 'Authentication failed' }}
      - Email: {{ current_user.json.data.email | default('N/A') if current_user.status == 200 else 'N/A' }}
      - Account: {{ harness_account_id }}

# Validate Delegate
- name: Get delegate status via API
  uri:
    url: "{{ harness_api_base }}/ng/api/delegates"
    method: GET
    headers: "{{ harness_api_headers }}"
    body_format: json
    body:
      accountIdentifier: "{{ harness_account_id }}"
      orgIdentifier: "{{ harness_org_id }}"
      projectIdentifier: "{{ harness_project_id }}"
    status_code: 200
    validate_certs: yes
  register: delegate_list
  failed_when: false

- name: Check delegate deployment in Kubernetes
  k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: "{{ harness_delegate_name }}"
    namespace: "{{ harness_delegate_namespace }}"
  register: delegate_k8s_status
  failed_when: false

- name: Check delegate pods
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ harness_delegate_namespace }}"
    label_selectors:
      - "app=harness-delegate"
  register: delegate_pods
  failed_when: false

- name: Display delegate validation
  debug:
    msg: |
      ========================================
      Delegate Status:
      ========================================
      
      Delegate API Status:
      {% if delegate_list.status == 200 %}
      Total Delegates: {{ delegate_list.json.data.totalItems | default(0) }}
      {% for delegate in delegate_list.json.data.content | default([]) %}
      - Name: {{ delegate.delegateName }}
        Status: {{ delegate.status }}
        Connected: {{ delegate.connected }}
        Last Heartbeat: {{ delegate.lastHeartBeat | default('N/A') }}
      {% endfor %}
      {% else %}
      Unable to fetch delegate status from API
      {% endif %}
      
      Kubernetes Deployment:
      - Name: {{ harness_delegate_name }}
      - Namespace: {{ harness_delegate_namespace }}
      - Ready Replicas: {{ delegate_k8s_status.resources[0].status.readyReplicas | default(0) if delegate_k8s_status.resources else 0 }}/{{ delegate_k8s_status.resources[0].status.replicas | default(0) if delegate_k8s_status.resources else 0 }}
      - Pods Running: {{ delegate_pods.resources | length }}

# Validate Connectors
- name: Test all connectors via API
  uri:
    url: "{{ harness_api_base }}/ng/api/connectors/testConnection/{{ item.id }}"
    method: POST
    headers: "{{ harness_api_headers }}"
    body_format: json
    body:
      accountIdentifier: "{{ harness_account_id }}"
      orgIdentifier: "{{ harness_org_id }}"
      projectIdentifier: "{{ harness_project_id }}"
    status_code: 200
    validate_certs: yes
  loop:
    - { id: "{{ connector_github_id }}", name: "GitHub" }
    - { id: "{{ connector_aws_ecr_id }}", name: "AWS ECR" }
    - { id: "{{ connector_rosa_cluster_id }}", name: "ROSA Cluster" }
  register: connector_tests
  failed_when: false

- name: Display connector validation
  debug:
    msg: |
      ========================================
      Connector Status:
      ========================================
      {% for test in connector_tests.results %}
      
      {{ test.item.name }} Connector:
      - ID: {{ test.item.id }}
      - Test Status: {{ 'SUCCESS' if test.status == 200 else 'FAILED' }}
      {% if test.status == 200 %}
      - Connection: {{ test.json.data.status | default('N/A') }}
      - Error: {{ test.json.data.errorSummary | default('None') }}
      {% else %}
      - Error: {{ test.msg | default('Connection test failed') }}
      {% endif %}
      {% endfor %}

# Validate Services
- name: Get services list via API
  uri:
    url: "{{ harness_api_base }}/ng/api/servicesV2"
    method: GET
    headers: "{{ harness_api_headers }}"
    body_format: json
    body:
      accountIdentifier: "{{ harness_account_id }}"
      orgIdentifier: "{{ harness_org_id }}"
      projectIdentifier: "{{ harness_project_id }}"
    status_code: 200
    validate_certs: yes
  register: services_check
  failed_when: false

# Validate Environments
- name: Get environments list via API
  uri:
    url: "{{ harness_api_base }}/ng/api/environmentsV2"
    method: GET
    headers: "{{ harness_api_headers }}"
    body_format: json
    body:
      accountIdentifier: "{{ harness_account_id }}"
      orgIdentifier: "{{ harness_org_id }}"
      projectIdentifier: "{{ harness_project_id }}"
    status_code: 200
    validate_certs: yes
  register: environments_check
  failed_when: false

# Validate Pipelines
- name: Get pipelines list via API
  uri:
    url: "{{ harness_api_base }}/ng/api/pipelines"
    method: GET
    headers: "{{ harness_api_headers }}"
    body_format: json
    body:
      accountIdentifier: "{{ harness_account_id }}"
      orgIdentifier: "{{ harness_org_id }}"
      projectIdentifier: "{{ harness_project_id }}"
    status_code: 200
    validate_certs: yes
  register: pipelines_check
  failed_when: false
  when: enable_pipeline_creation | bool

# Validate Secrets (if needed)
- name: Get secrets list via API
  uri:
    url: "{{ harness_api_base }}/ng/api/v2/secrets"
    method: GET
    headers: "{{ harness_api_headers }}"
    body_format: json
    body:
      accountIdentifier: "{{ harness_account_id }}"
      orgIdentifier: "{{ harness_org_id }}"
      projectIdentifier: "{{ harness_project_id }}"
      types:
        - SecretText
        - SecretFile
    status_code: 200
    validate_certs: yes
  register: secrets_check
  failed_when: false

# Generate Validation Report
- name: Generate validation report
  set_fact:
    validation_report:
      timestamp: "{{ ansible_date_time.iso8601 }}"
      account_id: "{{ harness_account_id }}"
      project: "{{ harness_project_id }}"
      api_authentication: "{{ 'SUCCESS' if current_user.status == 200 else 'FAILED' }}"
      delegate:
        total: "{{ delegate_list.json.data.totalItems | default(0) if delegate_list.status == 200 else 'N/A' }}"
        k8s_ready: "{{ delegate_k8s_status.resources[0].status.readyReplicas | default(0) if delegate_k8s_status.resources else 0 }}"
      connectors:
        github: "{{ 'CONNECTED' if connector_tests.results[0].status == 200 else 'FAILED' }}"
        aws_ecr: "{{ 'CONNECTED' if connector_tests.results[1].status == 200 else 'FAILED' }}"
        rosa_cluster: "{{ 'CONNECTED' if connector_tests.results[2].status == 200 else 'FAILED' }}"
      resources:
        services: "{{ services_check.json.data.totalItems | default(0) if services_check.status == 200 else 'N/A' }}"
        environments: "{{ environments_check.json.data.totalItems | default(0) if environments_check.status == 200 else 'N/A' }}"
        pipelines: "{{ pipelines_check.json.data.totalItems | default(0) if pipelines_check.status == 200 and enable_pipeline_creation else 'N/A' }}"
        secrets: "{{ secrets_check.json.data.totalItems | default(0) if secrets_check.status == 200 else 'N/A' }}"

- name: Display validation summary
  debug:
    msg: |
      ========================================
      HARNESS VALIDATION REPORT
      ========================================
      Timestamp: {{ validation_report.timestamp }}
      Account: {{ validation_report.account_id }}
      Project: {{ validation_report.project }}
      
      ✓ API Authentication: {{ validation_report.api_authentication }}
      
      DELEGATE STATUS:
      - Total Delegates: {{ validation_report.delegate.total }}
      - K8s Ready Pods: {{ validation_report.delegate.k8s_ready }}
      
      CONNECTOR STATUS:
      - GitHub: {{ validation_report.connectors.github }}
      - AWS ECR: {{ validation_report.connectors.aws_ecr }}
      - ROSA Cluster: {{ validation_report.connectors.rosa_cluster }}
      
      RESOURCES CREATED:
      - Services: {{ validation_report.resources.services }}
      - Environments: {{ validation_report.resources.environments }}
      - Pipelines: {{ validation_report.resources.pipelines }}
      - Secrets: {{ validation_report.resources.secrets }}
      
      {% if validation_report.api_authentication == 'SUCCESS' and validation_report.delegate.k8s_ready | int > 0 %}
      STATUS: ✅ VALIDATION SUCCESSFUL
      {% else %}
      STATUS: ❌ VALIDATION FAILED - Check errors above
      {% endif %}
      ========================================

- name: Save validation report to file
  copy:
    content: "{{ validation_report | to_nice_yaml }}"
    dest: "/tmp/harness-validation-report-{{ ansible_date_time.epoch }}.yaml"
  when: save_validation_report | default(false) | bool