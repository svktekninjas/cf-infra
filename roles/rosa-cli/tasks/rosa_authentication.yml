---
# Task 2: Request user to enter ROSA auth token, perform login and validate token
#
# Instructions to acquire ROSA auth token:
# 1. Visit https://console.redhat.com/openshift/token/rosa
# 2. Log in with your Red Hat account credentials
# 3. Click "Load token" or "Copy token" button
# 4. Copy the token string that appears
# 5. Paste it when prompted by this playbook
#
# Alternative method:
# 1. Go to https://cloud.redhat.com/openshift/token
# 2. Select "ROSA" from the dropdown
# 3. Copy the token provided
#
# Note: The token is valid for 24 hours and provides CLI access to your ROSA resources

- name: Prompt user for ROSA auth token
  pause:
    prompt: "Please enter your ROSA authentication token (from https://console.redhat.com/openshift/token/rosa)"
    echo: no
  register: rosa_token_input
  when: rosa_auth_token == ""
  tags: rosa

- name: Set ROSA auth token from user input
  set_fact:
    rosa_auth_token: "{{ rosa_token_input.user_input }}"
  when: rosa_auth_token == "" and rosa_token_input.user_input is defined
  tags: rosa

- name: Validate ROSA auth token is provided
  fail:
    msg: "ROSA authentication token is required to proceed"
  when: rosa_auth_token == ""
  tags: rosa

- name: Perform ROSA login
  shell: "{{ rosa_cli_binary_name }} login --token={{ rosa_auth_token }}"
  register: rosa_login_result
  no_log: true
  ignore_errors: true
  environment:
    AWS_PROFILE: "{{ aws_profile | default('default') }}"
  tags: rosa

- name: Check if ROSA login was successful
  fail:
    msg: "ROSA login failed. Please verify your authentication token. Error: {{ rosa_login_result.stderr }}"
  when: rosa_login_result.rc != 0
  tags: rosa

- name: Verify ROSA authentication
  shell: "{{ rosa_cli_binary_name }} whoami"
  register: rosa_whoami_result
  changed_when: false
  environment:
    AWS_PROFILE: "{{ aws_profile | default('default') }}"
  tags: rosa

- name: Display ROSA authentication status
  debug:
    msg: "Successfully authenticated to ROSA as: {{ rosa_whoami_result.stdout }}"
  when: rosa_whoami_result.rc == 0
  tags: rosa

- name: Verify ROSA permissions
  shell: "{{ rosa_cli_binary_name }} verify permissions"
  register: rosa_permissions_check
  ignore_errors: true
  changed_when: false
  environment:
    AWS_PROFILE: "{{ aws_profile | default('default') }}"
  tags: rosa

- name: Display ROSA permissions status
  debug:
    msg: "ROSA permissions verification: {{ 'PASSED' if rosa_permissions_check.rc == 0 else 'FAILED - Some permissions may be missing' }}"
  tags: rosa

- name: Store ROSA auth token for environment configuration
  set_fact:
    validated_rosa_token: "{{ rosa_auth_token }}"
  tags: rosa
